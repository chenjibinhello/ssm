<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.demo.dao.erp.ErpUsefulExpressionsDao">
  <resultMap id="BaseResultMap" type="com.learning.demo.bean.domain.erp.ErpUsefulExpressions">
    <id column="expression_id" jdbcType="INTEGER" property="expressionId" />
    <result column="erp_id" jdbcType="INTEGER" property="erpId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <if test="fields == null">
      expression_id, erp_id, content, created, updated, is_deleted
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    expression_id,erp_id,content,created,updated,is_deleted
    from erp_useful_expressions
    where expression_id = #{expressionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from erp_useful_expressions
    where expression_id = #{expressionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learning.demo.bean.domain.erp.ErpUsefulExpressions">
    insert into erp_useful_expressions (expression_id, erp_id, content, 
      created, updated, is_deleted
      )
    values (#{expressionId,jdbcType=INTEGER}, #{erpId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{created,jdbcType=INTEGER}, #{updated,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.learning.demo.bean.domain.erp.ErpUsefulExpressions">
    insert into erp_useful_expressions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expressionId != null">
        expression_id,
      </if>
      <if test="erpId != null">
        erp_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expressionId != null">
        #{expressionId,jdbcType=INTEGER},
      </if>
      <if test="erpId != null">
        #{erpId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learning.demo.bean.domain.erp.ErpUsefulExpressions">
    update erp_useful_expressions
    <set>
      <if test="erpId != null">
        erp_id = #{erpId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where expression_id = #{expressionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learning.demo.bean.domain.erp.ErpUsefulExpressions">
    update erp_useful_expressions
    set erp_id = #{erpId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where expression_id = #{expressionId,jdbcType=INTEGER}
  </update>
</mapper>